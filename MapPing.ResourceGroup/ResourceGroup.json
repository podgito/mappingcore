{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "env": {
      "type": "string",
      "allowedValues": [
        "dev",
        "prod",
        "valid"
      ]
    },
    "storemappingfuncType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    },
    "signalrServiceName": {
      "type": "string"
    },
    "signalrSkuName": {
      "type": "string",
      "allowedValues": [
        "Free_F1",
        "Standard_S1"
      ]
    },
      "signalrTier": {
      "type": "string",
      "allowedValues": [
        "Free",
        "Standard",
        "Premium"
      ]
    }
  },
  "variables": {
    "func-mappingName": "[concat('funcmapping', parameters('env'))]",
    "storemappingfuncName": "[concat(toLower(variables('func-mappingName')), 'ac51')]"
  },
  "resources": [
    {
      "name": "[variables('func-mappingName')]",
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-01",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storemappingfuncName'))]"
      ],
      "tags": {
        "displayName": "func-mapping"
      },
      "properties": {
        "name": "[variables('func-mappingName')]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storemappingfuncName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storemappingfuncName')), '2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storemappingfuncName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storemappingfuncName')), '2015-05-01-preview').key1)]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "beta"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storemappingfuncName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storemappingfuncName')), '2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[concat(toLower(variables('storemappingfuncName')))]"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "6.5.0"
            },
            {
              "name": "IPGeolocationServices.IPStack.ApiKey",
              "value": "0b50b6896a303625ef928bf7c058c1c8"
            },
            {
              "name": "IPGeolocationServices.IPStack.BaseAddress",
              "value": "http://api.ipstack.com/"
            },
            {
              "name": "IPGeolocationServices.IPStack.PathFormat",
              "value": "{ipAddress}?access_key={apiKey}&format=1"
            }
          ]
        },
        "clientAffinityEnabled": false,
        "reserved": false
      }
    },
    {
      "name": "[variables('storemappingfuncName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-05-01-preview",
      "properties": {
        "accountType": "[parameters('storemappingfuncType')]"
      }
    },
    {
      "type": "Microsoft.SignalRService/SignalR",
      "name": "[parameters('signalrServiceName')]",
      "apiVersion": "2018-10-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "hostNamePrefix": "[parameters('signalrServiceName')]",
        "features": [
          {
            "flag": "ServiceMode",
            "value": "Serverless"
          }
        ]
      },
      "sku": {
        "name": "[parameters('signalrSkuName')]",
        "tier": "[parameters('signalrTier')]",
        "capacity": 1
      },
      "tags": {
        "displayName": "SignalRService"
      }
    }
  ]
}