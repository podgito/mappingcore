# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  validationResourceGroup: 'rg-mapping-validation'


steps:
- script: dotnet build --configuration $(buildConfiguration)
  displayName: "Build Solution"

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    projects: '**/*.Test*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: AzureCLI@1
  inputs:
    azureSubscription: 'Pay-As-You-Go (1d823139-e005-40f4-a152-8f6b5d3524b9)'
    scriptLocation: 'inlineScript'
    inlineScript: 'az group create -vv --location northeurope --name $(validationResourceGroup) --tags environment=temp application=mapping'

- task: AzureResourceGroupDeployment@2
  displayName: 'Validate Resource Group'
  inputs:
    azureSubscription: 'Pay-As-You-Go (1d823139-e005-40f4-a152-8f6b5d3524b9)'
    action: 'Create Or Update Resource Group'
    resourceGroupName: '$(validationResourceGroup)'
    location: 'North Europe'
    csmFile: '**MapPing.ResourceGroup/ResourceGroup.json'
    overrideParameters: > 
                            -env validation -signalrServiceName sr-mapping-validation -signalrSkuName Free_F1 -signalrTier Free
    deploymentMode: 'Validation'

- task: AzureCLI@1
  displayName: 'Delete Resource Group'
  inputs:
    azureSubscription: 'Pay-As-You-Go (1d823139-e005-40f4-a152-8f6b5d3524b9)'
    scriptLocation: 'inlineScript'
    inlineScript: 'az group delete --name $(validationResourceGroup) --no-wait --yes'

- task: DotNetCoreCLI@2
  displayName: Publish
  inputs:
    command: publish
    publishWebProjects: true
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)'
    zipAfterPublish: True

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'

- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

